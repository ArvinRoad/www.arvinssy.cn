{"title":"Java 敌人类","uid":"d6ed492f35699105c54e7daa2c4807c0","slug":"CodeGame_Java_SuperMary_Test07","date":"2021-11-14T10:48:52.000Z","updated":"2023-11-26T10:38:32.669Z","comments":true,"path":"api/articles/CodeGame_Java_SuperMary_Test07.json","keywords":null,"cover":"https://pic2.zhimg.com/v2-957d2a1fac8856452f3ce0aac00427d9_b.jpg","content":"<h3 id=\"代码演示\"><a href=\"#代码演示\" class=\"headerlink\" title=\"代码演示\"></a>代码演示</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">package com.arvin;\n\nimport java.awt.image.BufferedImage;\n\n&#x2F;**\n *  敌人类\n *&#x2F;\n\npublic class Enemy implements Runnable &#123;\n\n    &#x2F;&#x2F; 存储当前坐标\n    private int x,y;\n\n    &#x2F;&#x2F; 存储敌人类型\n    private int type;\n\n    &#x2F;&#x2F; 判断敌人运动的方向\n    private boolean face_to &#x3D; true;\n\n    &#x2F;&#x2F; 用于显示敌人的当前图像\n    private BufferedImage show;\n\n    &#x2F;&#x2F; 定义一个背景对象\n    private BackGround backGround;\n\n    &#x2F;&#x2F; 食人花运动的极限范围\n    private int max_up &#x3D; 0;\n    private int max_down &#x3D; 0;\n\n    &#x2F;&#x2F; 定义一个线程对象 实现敌人的运动\n    private Thread thread &#x3D; new Thread(this);\n\n    &#x2F;&#x2F; 定义当前的图片的状态\n    private int image_type &#x3D; 0;\n\n    &#x2F;**\n     *  蘑菇敌人的构造函数\n     *&#x2F;\n    public Enemy (int x,int y,boolean face_to,int type,BackGround backGround) &#123;\n        this.x &#x3D; x;\n        this.y &#x3D; y;\n        this.face_to &#x3D; face_to;\n        this.type &#x3D; type;\n        this.backGround &#x3D; backGround;\n\n        show &#x3D; StaticValue.Mogu.get(0); &#x2F;&#x2F; 初始化 Show\n\n        thread.start(); &#x2F;&#x2F; 启动线程\n\n    &#125;\n\n    &#x2F;**\n     *  食人花敌人的构造函数\n     *&#x2F;\n    public Enemy (int x,int y,boolean face_to,int type,int max_up,int max_down,BackGround backGround)&#123;\n        this.x &#x3D; x;\n        this.y &#x3D; y;\n        this.face_to &#x3D; face_to;\n        this.type &#x3D; type;\n        this.max_up &#x3D; max_up;\n        this.max_down &#x3D; max_down;\n        this.backGround &#x3D; backGround;\n\n        show &#x3D; StaticValue.Flower.get(0);\n\n        thread.start();\n    &#125;\n\n    &#x2F;**\n     *  敌人的死亡方法\n     *&#x2F;\n    public void death () &#123;\n        show &#x3D; StaticValue.Mogu.get(2); &#x2F;&#x2F; 蘑菇死亡时图片\n        this.backGround.getEnemyList().remove(this); &#x2F;&#x2F;死亡后移除敌人\n    &#125;\n\n    &#x2F;* 生成 x y show 的 get 方法 *&#x2F;\n\n    public int getX() &#123;\n        return x;\n    &#125;\n\n    public int getY() &#123;\n        return y;\n    &#125;\n\n    public BufferedImage getShow() &#123;\n        return show;\n    &#125;\n\n    &#x2F;&#x2F; 生成 type的 Get 方法\n    public int getType() &#123;\n        return type;\n    &#125;\n\n    &#x2F;&#x2F; 抽写 Runnable 接口方法\n    @Override\n    public void run() &#123;\n        while (true)&#123;\n            &#x2F;**\n             *  判断是否是蘑菇敌人\n             *&#x2F;\n            if (type &#x3D;&#x3D; 1) &#123;\n                if (face_to)&#123;   &#x2F;&#x2F;判断当前朝向\n                    this.x -&#x3D; 2;\n                &#125;else&#123;\n                    this.x +&#x3D; 2;\n                &#125;\n                &#x2F;&#x2F; 判断切换 敌人的运动图片\n                image_type &#x3D; image_type &#x3D;&#x3D; 1 ? 0 : 1;\n                show &#x3D; StaticValue.Mogu.get(image_type);\n            &#125;\n            &#x2F;&#x2F; 定义两个布尔 它们用于判断的敌人向左还是向右\n            boolean canLeft &#x3D; true;\n            boolean canRight &#x3D; true;\n\n            &#x2F;&#x2F; 遍历障碍物\n            for (int i &#x3D; 0; i &lt; backGround.getObstacleList().size(); i++) &#123;\n                Obstacle obl &#x3D; backGround.getObstacleList().get(i); &#x2F;&#x2F; 定义临时变量\n\n                &#x2F;&#x2F; 判断是否可以向右走\n                if (obl.getX() &#x3D;&#x3D; this.x + 36 &amp;&amp; (obl.getY() + 65 &gt; this.y &amp;&amp; obl.getY() -35 &lt; this.y)) &#123;\n                    canRight &#x3D; false;\n                &#125;\n\n                &#x2F;&#x2F; 判断是否可以向左走\n                if (obl.getX() &#x3D;&#x3D; this.x - 36 &amp;&amp; (obl.getY() + 65 &gt; this.y &amp;&amp; obl.getY() -35 &lt; this.y)) &#123;\n                    canLeft &#x3D; false;\n                &#125;\n            &#125;\n\n            &#x2F;&#x2F; 判断蘑菇敌人是否向左走 并且已经碰到了我们的障碍物 或者敌人走到了屏幕最左侧\n            if (face_to &amp;&amp; !canLeft || this.x &#x3D;&#x3D; 0) &#123;\n                face_to &#x3D; false;    &#x2F;&#x2F; 重置方向向右走\n            &#125;else if((!face_to) &amp;&amp; (!canRight) || this.x &#x3D;&#x3D; 764)&#123; &#x2F;&#x2F;反过来\n                face_to &#x3D; true;\n            &#125;\n\n            &#x2F;**\n             *  判断是否是食人花敌人\n             *&#x2F;\n            if (type &#x3D;&#x3D; 2) &#123;\n                if (face_to) &#123; &#x2F;&#x2F; 食人花敌人的运动方向\n                    this.y -&#x3D; 2;\n                &#125;else&#123;\n                    this.y +&#x3D; 2;\n                &#125;\n                image_type &#x3D; image_type &#x3D;&#x3D; 1 ? 0 : 1;   &#x2F;&#x2F;图像切换\n                &#x2F;&#x2F; 食人花敌人是否到了上限位置\n                if (face_to &amp;&amp; (this.y &#x3D;&#x3D; max_up)) &#123;\n                    face_to &#x3D; false;\n                &#125;\n                &#x2F;&#x2F; 食人花敌人是否到了下限位置\n                if ((!face_to) &amp;&amp; (this.y &#x3D;&#x3D; max_down))&#123;\n                    face_to &#x3D; true;\n                &#125;\n                show &#x3D; StaticValue.Flower.get(image_type);\n            &#125;\n            try &#123;\n                Thread.sleep(50);   &#x2F;&#x2F; 线程休眠50毫秒\n            &#125; catch (InterruptedException exception) &#123;\n                exception.printStackTrace();\n            &#125;\n        &#125;\n    &#125;\n&#125;</code></pre>","text":"代码演示package com.arvin; import java.awt.image.BufferedImage; &#x2F;** * 敌人类 *&#x2...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"CodeGame","slug":"CodeGame","count":9,"path":"api/categories/CodeGame.json"}],"tags":[{"name":"程序","slug":"程序","count":11,"path":"api/tags/程序.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E6%BC%94%E7%A4%BA\"><span class=\"toc-text\">代码演示</span></a></li></ol>","author":{"name":"Arvin","slug":"blog-author","avatar":"/imgs/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Java 音乐类（完结）","uid":"ef9cd7e49fae1afd883185c908e3ad82","slug":"CodeGame_Java_SuperMary_Test08","date":"2021-11-15T08:27:52.000Z","updated":"2023-11-26T10:38:32.669Z","comments":true,"path":"api/articles/CodeGame_Java_SuperMary_Test08.json","keywords":null,"cover":"https://www.ign.com.cn/sm/ign_cn/screenshot/default/5_qw6f.jpg","text":"package com.arvin; import javazoom.jl.decoder.JavaLayerException; import javazoo...","link":"","photos":[],"count_time":{"symbolsCount":806,"symbolsTime":"1 mins."},"categories":[{"name":"CodeGame","slug":"CodeGame","count":9,"path":"api/categories/CodeGame.json"}],"tags":[{"name":"程序","slug":"程序","count":11,"path":"api/tags/程序.json"}],"author":{"name":"Arvin","slug":"blog-author","avatar":"/imgs/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Java 马里奥类","uid":"060767d5f4be74152fd9d1681be93417","slug":"CodeGame_Java_SuperMary_Test06","date":"2021-11-12T11:28:52.000Z","updated":"2023-11-26T10:38:32.669Z","comments":true,"path":"api/articles/CodeGame_Java_SuperMary_Test06.json","keywords":null,"cover":"https://tse3-mm.cn.bing.net/th/id/OIP-C.yhipSAzNiVulV4MZu2cVJAHaEH?pid=ImgDet&rs=1","text":"代码演示package com.arvin; import java.awt.image.BufferedImage; &#x2F;** * 马里奥类 *&#x...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"11 mins."},"categories":[{"name":"CodeGame","slug":"CodeGame","count":9,"path":"api/categories/CodeGame.json"}],"tags":[{"name":"程序","slug":"程序","count":11,"path":"api/tags/程序.json"}],"author":{"name":"Arvin","slug":"blog-author","avatar":"/imgs/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}