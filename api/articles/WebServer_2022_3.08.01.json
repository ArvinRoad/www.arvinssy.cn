{"title":"WebServer构建","uid":"d16e3307a16ecb822048b7d5e1538015","slug":"WebServer_2022_3.08.01","date":"2022-03-07T19:55:00.000Z","updated":"2023-11-26T10:38:32.669Z","comments":true,"path":"api/articles/WebServer_2022_3.08.01.json","keywords":null,"cover":"https://img.php.cn/upload/article/000/000/020/5e91393a49cb1970.jpg","content":"<p>注意：该项目是采用C语言调用 WindowsAPI 进行实现的，如果不掌握简单的网络通信协议和C语言与Windows API 编程请先掌握后再来看。</p>\n<h1 id=\"什么是协议，理解IP地址和端口的概念\"><a href=\"#什么是协议，理解IP地址和端口的概念\" class=\"headerlink\" title=\"什么是协议，理解IP地址和端口的概念\"></a>什么是协议，理解IP地址和端口的概念</h1><p>作为新时代标杆的我们，已经离不开手机，离不开网络。对于互联网大家可能耳熟能详，但计算机网络的出现比互联网要早很多。</p>\n<h2 id=\"什么是协议\"><a href=\"#什么是协议\" class=\"headerlink\" title=\"什么是协议\"></a>什么是协议</h2><p>有的人说英语，有的人说中文，有的人说德语，说同一种语言的人可以交流，不同的语言之间就不行了。<br>如果语言不同则需要翻译，否则两人之间无法沟通，或者约定一下，我们都说英语，这个约定就相当于协议。<br>网络协议是通信计算机双方必须共同遵从的一组约定。它的三要素是：语法、语义、时序</p>\n<h2 id=\"计算机网络沟通用什么\"><a href=\"#计算机网络沟通用什么\" class=\"headerlink\" title=\"计算机网络沟通用什么\"></a>计算机网络沟通用什么</h2><p>TCP &#x2F; IP 传输控制协议：是指能够在多个不同网络间实现信息传输的协议簇。<br>TCP &#x2F;  IP 协议不仅仅指的是TCP 和 IP 两个协议，而是指一个由 FTP、SMTP、TCP、UDP、IP 等协议构成的协议簇，只是因为 TCP &#x2F; IP 协议中 TCP 协议和 IP 协议最具有代表性，所以被称为 TCP &#x2F; IP 协议。</p>\n<h2 id=\"端口\"><a href=\"#端口\" class=\"headerlink\" title=\"端口\"></a>端口</h2><h3 id=\"什么是端口\"><a href=\"#什么是端口\" class=\"headerlink\" title=\"什么是端口\"></a>什么是端口</h3><p>设备与外界通讯交流的出口。<br>端口就好比一个房子的门，是出入这间房子的必经之路。</p>\n<table>\n<thead>\n<tr>\n<th>物理端口</th>\n<th>电脑网口、USB</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>虚拟端口</td>\n<td>程序和网络进行通信的端口</td>\n</tr>\n</tbody></table>\n<h3 id=\"端口号\"><a href=\"#端口号\" class=\"headerlink\" title=\"端口号\"></a>端口号</h3><p>端口是通过端口号来标记的，端口号只有整数，范围是从 0 到 65535 2字节存储 2^16 - 1</p>\n<h3 id=\"端口是怎样分配的\"><a href=\"#端口是怎样分配的\" class=\"headerlink\" title=\"端口是怎样分配的\"></a>端口是怎样分配的</h3><p>端口号不是随便使用的，而是按照一定的规定进行分配。</p>\n<h3 id=\"知名端口\"><a href=\"#知名端口\" class=\"headerlink\" title=\"知名端口\"></a>知名端口</h3><p>知名端口就是众所周知的端口号，范围从 0 到 1023<br>80 端口分配给 HTTP 服务<br>21 端口分配给 FTP 服务<br>22 端口分配给 SSH 服务（远程控制服务）</p>\n<h3 id=\"动态端口\"><a href=\"#动态端口\" class=\"headerlink\" title=\"动态端口\"></a>动态端口</h3><p>动态端口的范围是从 1024 到 65535<br>之所以称为动态端口，是因为它一般不固定分配某种服务，而是动态分配&#x2F;<br>动态分配是指当一个系统进程或应用程序进行需要网络通信时，它向主机申请一个端口，主机从可用端口号中分配一个供它使用。<br>当这个进程关闭时，同时也就释放了所占用的端口号。</p>\n<h1 id=\"TCP协议\"><a href=\"#TCP协议\" class=\"headerlink\" title=\"TCP协议\"></a>TCP协议</h1><p>TCP 通讯过程中，必须得先建立相关的链接，才能进行相互通讯，这个类似于我们日常生活中的打电话。TCP 的三次握手。<br>​如果想让别人能够打通我们的电话获取相应的服务就需要做以下几件事情：</p>\n<table>\n<thead>\n<tr>\n<th>买手机</th>\n<th>socket 创建一个套接字</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>插上手机卡</td>\n<td>bind  绑定ip 和 port（端口号）</td>\n</tr>\n<tr>\n<td>设计手机为正常接听状态（即能够响铃）</td>\n<td>listen 使套接字变为可以被动链接</td>\n</tr>\n<tr>\n<td>静静的等着别人拨打</td>\n<td>accept 等待客户端的链接</td>\n</tr>\n<tr>\n<td>接收电话</td>\n<td>recv &#x2F; send 接收发送数据</td>\n</tr>\n</tbody></table>\n<p>如同上面的电话机过程一样，在程序中，如果想要完成一个 TCP 服务功能，需要的程序流程如上第二列内容。</p>\n<h1 id=\"HTTP协议\"><a href=\"#HTTP协议\" class=\"headerlink\" title=\"HTTP协议\"></a>HTTP协议</h1><p>HTTP 协议即超文本传输协议，是Web联网的基础，也是手机联网常用的协议之一，HTTP 协议是建立在 TCP 协议之上的一种应用。<br>​</p>\n<h3 id=\"典型的-HTTP-事务处理有如下的过程\"><a href=\"#典型的-HTTP-事务处理有如下的过程\" class=\"headerlink\" title=\"典型的 HTTP 事务处理有如下的过程\"></a>典型的 HTTP 事务处理有如下的过程</h3><h3 id=\"客户与服务器建立链接。\"><a href=\"#客户与服务器建立链接。\" class=\"headerlink\" title=\"客户与服务器建立链接。\"></a>客户与服务器建立链接。</h3><p>客户向服务器提出请求。<br>服务器接受请求，并根据请求返回相应的文件作为应答。<br>客户与服务关闭链接。<br>​</p>\n<p>HTTP 请求数据方法：GET HEAD POST PUT 等<br>每种请求方法规定了客户和服务器之间不同的信息交换方式，常用的请求方法是 GET 和 POST<br>​</p>\n<p>七层模型：物理层，数据层链路层、网络层、传输层、会话层、表示层、应用层。</p>\n<h1 id=\"实例代码：\"><a href=\"#实例代码：\" class=\"headerlink\" title=\"实例代码：\"></a>实例代码：</h1><p>注意：在运行HTML文件前，请在项目属性中 - C&#x2F;C++ - 常规 - SDL检查改成否</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;WinSock2.h&gt;\n​\n\n#define PORT 80\n#define DATASIZE 1024\n​\n\n#pragma comment(lib,&quot;ws2_32.lib&quot;)\n​\n\nvoid sendHtml(SOCKET client, char* filenName);\n​\n\nint main() &#123;\n​\n\nprintf(&quot;图灵服务器开启成功\\n&quot;);\n&#x2F;**\n*        确定使用的 Socket 版本信息\n*        第一个参数：期望使用的版本\n*        第二个参数：获取版本信息\n*&#x2F;\nWSADATA wsadata;\nint ISOK &#x3D; WSAStartup(MAKEWORD(2, 2), &amp;wsadata);\n​\n\nif (ISOK &#x3D;&#x3D; WSAEINVAL) &#123;\nperror(&quot;SOCKET 请求失败……\\n&quot;);\n&#125;\n&#x2F;**\n*        创建一个 Socket\n*        第一个参数：协议族。指定使用什么协议 AF_INET 使用 IPv4\n*        第二个参数：传输类型 Sock_STREAM 流传输\n*        第三个参数：遵从 TCP 协议\n*&#x2F;\nSOCKET server &#x3D; socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);\n​\n\nif (server &#x3D;&#x3D; INVALID_SOCKET) &#123;\nperror(&quot;SOCKET 创建失败……\\n&quot;);\n&#125;\n&#x2F;* 绑定端口号和 IP 地址 *&#x2F;\nstruct sockaddr_in seraddr;\nseraddr.sin_family &#x3D; AF_INET;\nseraddr.sin_port &#x3D; htons(PORT);        &#x2F;&#x2F; 注意：网络是大端存储，电脑是小端存储\nseraddr.sin_addr.s_addr &#x3D; INADDR_ANY;\nISOK &#x3D; bind(server, (struct sockaddr*) &amp; seraddr, sizeof(seraddr));\nif (ISOK &#x3D;&#x3D; SOCKET_ERROR) &#123;\nperror(&quot;BIND 绑定失败……\\n&quot;);\n&#125;\n&#x2F;* 监听 listen 第二个参数：同时监听多少 *&#x2F;\nwhile (1)\n&#123;\nprintf(&quot;等待链接中……\\n&quot;);\nlisten(server, 5);\nSOCKET client &#x3D; accept(server, NULL, NULL);\nif (client &#x3D;&#x3D; INVALID_SOCKET) &#123;\nperror(&quot;ACCEPT 监听失败……\\n&quot;);\n&#125;\n&#x2F;* 接收信息 *&#x2F;\nchar buffer[DATASIZE];\nrecv(client, buffer, sizeof(buffer), 0);\n&#x2F;&#x2F;printf(&quot;%s 共接收到%d条数据\\n&quot;, buffer, strlen(buffer));\n&#x2F;&#x2F;char sneddata[DATASIZE] &#x3D; &quot;&lt;h1 style &#x3D; \\&quot;color:red;\\&quot;&gt;Hello Turing&lt;&#x2F;h1&gt;&quot;;\n&#x2F;&#x2F;send(client, sneddata, strlen(sneddata), 0);\n​\n\n&#x2F;* 网页文件传输 *&#x2F;\nsendHtml(client, &quot;.&#x2F;index.html&quot;);\n​\n\n&#x2F;* 通信完毕，断开链接 *&#x2F;\nclosesocket(client);\n&#125;\n&#x2F;* 关闭服务器 *&#x2F;\nclosesocket(server);\n&#x2F;* 关闭 Socket 套接字请求 *&#x2F;\nWSACleanup();\n​\n\nint num &#x3D; getchar();\n​\n\nreturn 0;\n&#125;\n​\n\nvoid sendHtml(SOCKET client, char* filenName) &#123;\nFILE* pfile &#x3D; fopen(filenName, &quot;r&quot;);\nif (pfile &#x3D;&#x3D; NULL) &#123;\nperror(&quot;HTML 文件打开失败……\\n&quot;);\nreturn;\n&#125;\n​\n\ndo &#123;\nchar senddata[DATASIZE];\nfgets(senddata, DATASIZE, pfile);\nsend(client, senddata, strlen(senddata), 0);\n&#125; while (!feof(pfile));\n​\n\n&#x2F;* 关闭 *&#x2F;\nfclose(pfile);\n&#125;</code></pre>\n","text":"注意：该项目是采用C语言调用 WindowsAPI 进行实现的，如果不掌握简单的网络通信协议和C语言与Windows API 编程请先掌握后再来看。 什么是协议...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"程序","slug":"程序","count":29,"path":"api/categories/程序.json"}],"tags":[{"name":"教学文档","slug":"教学文档","count":33,"path":"api/tags/教学文档.json"},{"name":"C语言","slug":"C语言","count":9,"path":"api/tags/C语言.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%8D%8F%E8%AE%AE%EF%BC%8C%E7%90%86%E8%A7%A3IP%E5%9C%B0%E5%9D%80%E5%92%8C%E7%AB%AF%E5%8F%A3%E7%9A%84%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">什么是协议，理解IP地址和端口的概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">什么是协议</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%B2%9F%E9%80%9A%E7%94%A8%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">计算机网络沟通用什么</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AB%AF%E5%8F%A3\"><span class=\"toc-text\">端口</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E7%AB%AF%E5%8F%A3\"><span class=\"toc-text\">什么是端口</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AB%AF%E5%8F%A3%E5%8F%B7\"><span class=\"toc-text\">端口号</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AB%AF%E5%8F%A3%E6%98%AF%E6%80%8E%E6%A0%B7%E5%88%86%E9%85%8D%E7%9A%84\"><span class=\"toc-text\">端口是怎样分配的</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E5%90%8D%E7%AB%AF%E5%8F%A3\"><span class=\"toc-text\">知名端口</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E7%AB%AF%E5%8F%A3\"><span class=\"toc-text\">动态端口</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#TCP%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">TCP协议</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#HTTP%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">HTTP协议</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B8%E5%9E%8B%E7%9A%84-HTTP-%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%E6%9C%89%E5%A6%82%E4%B8%8B%E7%9A%84%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">典型的 HTTP 事务处理有如下的过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%A2%E6%88%B7%E4%B8%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BB%BA%E7%AB%8B%E9%93%BE%E6%8E%A5%E3%80%82\"><span class=\"toc-text\">客户与服务器建立链接。</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B%E4%BB%A3%E7%A0%81%EF%BC%9A\"><span class=\"toc-text\">实例代码：</span></a></li></ol>","author":{"name":"Arvin","slug":"blog-author","avatar":"/imgs/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"C语言指针(上)","uid":"bc8f9b6164f4278e84078fb333015364","slug":"C_2022_3.09.01","date":"2022-03-09T07:20:00.000Z","updated":"2023-11-26T10:38:32.665Z","comments":true,"path":"api/articles/C_2022_3.09.01.json","keywords":null,"cover":"https://tse1-mm.cn.bing.net/th/id/R-C.f24dba1c0741d3e26719d27dcbfa9ddb?rik=ixXaTtSKatsoXg&riu=http%3a%2f%2fwww.huatengzy.com%2fuploadfile%2f2020%2f1124%2f20201124084901674.jpg&ehk=8cudqdmImcXfxpnTIdHfG5Fw3USMKmi72wqJwGyq34M%3d&risl=&pid=ImgRaw&r=0","text":"5.0.1 外挂原理与指针什么是内存？从硬件形态上来说，内存就是一条形物理设备，从功能上来讲，内存是一个数据仓库，程序在执行前都要被装载到内存中，才能被中央处理...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"程序","slug":"程序","count":29,"path":"api/categories/程序.json"}],"tags":[{"name":"教学文档","slug":"教学文档","count":33,"path":"api/tags/教学文档.json"},{"name":"C语言","slug":"C语言","count":9,"path":"api/tags/C语言.json"}],"author":{"name":"Arvin","slug":"blog-author","avatar":"/imgs/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"C语言逻辑流程","uid":"283e767567236e303438acf396f39732","slug":"C_2022_3.07.01","date":"2022-03-07T07:55:00.000Z","updated":"2023-11-26T10:38:32.665Z","comments":true,"path":"api/articles/C_2022_3.07.01.json","keywords":null,"cover":"https://tse1-mm.cn.bing.net/th/id/R-C.f24dba1c0741d3e26719d27dcbfa9ddb?rik=ixXaTtSKatsoXg&riu=http%3a%2f%2fwww.huatengzy.com%2fuploadfile%2f2020%2f1124%2f20201124084901674.jpg&ehk=8cudqdmImcXfxpnTIdHfG5Fw3USMKmi72wqJwGyq34M%3d&risl=&pid=ImgRaw&r=0","text":"4.0. 函数程序的最小独立单元 - 语句程序：为解决某一问题而设计的一系列有序指令的集合。数据说明：数据的描述（数据的名称、类型、和初值等）语句：如何处理数据...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"程序","slug":"程序","count":29,"path":"api/categories/程序.json"}],"tags":[{"name":"教学文档","slug":"教学文档","count":33,"path":"api/tags/教学文档.json"},{"name":"C语言","slug":"C语言","count":9,"path":"api/tags/C语言.json"}],"author":{"name":"Arvin","slug":"blog-author","avatar":"/imgs/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}